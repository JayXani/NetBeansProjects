/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.com.projetoacademico.telasgraficas.cursos;

import br.com.projetoacademico.dao.DaoProfessor;
import br.com.projetoacademico.projetoescola.Cursos;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Danilo
 */
public class TelaCadastroCursos extends javax.swing.JInternalFrame {

    private final DaoProfessor updateInformations;

    /**
     * Creates new form TelaCadastroCursos
     *
     * @param updateInformations
     */
    public TelaCadastroCursos(DaoProfessor updateInformations) {
        this.updateInformations = updateInformations;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        comboCurso = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCadDisciplinas = new javax.swing.JTextArea();
        btnCadDisciplinas = new javax.swing.JButton();
        btnCadastrarCurso = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setMaximumSize(new java.awt.Dimension(600, 550));
        setMinimumSize(new java.awt.Dimension(600, 550));
        setPreferredSize(new java.awt.Dimension(600, 550));

        jLabel11.setText("<html>  <p>ATENÇÃO, No campo de disciplinas<br> \nInforme um abaixo do outro, todas as disciplinas que o professor terá. <br> \nCaso deseje cadastrar só o curso ou só as disciplinas, clique no botão<br>\ncorrespondente ao que deseja.\n</p> </html>");

        comboCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha um curso", "ADS", "AGR ", "LOG ", " " }));

        jLabel12.setText("Curso:");

        jLabel13.setText("Disciplinas");

        txtCadDisciplinas.setColumns(20);
        txtCadDisciplinas.setRows(5);
        jScrollPane2.setViewportView(txtCadDisciplinas);

        btnCadDisciplinas.setText("Cadastrar nova disciplina");
        btnCadDisciplinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadDisciplinasActionPerformed(evt);
            }
        });

        btnCadastrarCurso.setText("Cadastrar novo curso");
        btnCadastrarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarCursoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel1.setText("Cadastrar Cursos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(183, 183, 183))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCadastrarCurso)
                                .addGap(61, 61, 61)
                                .addComponent(btnCadDisciplinas))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(93, 93, 93))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrarCurso)
                    .addComponent(btnCadDisciplinas))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadDisciplinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadDisciplinasActionPerformed
        JOptionPane.showMessageDialog(null, """
                                            Pedimos desculpas pelo incoveniente, mas estamos com problemas no desenvolvimento. O erro ocorreu inesperadamente, 
                                            pe\u00e7o sua compreen\u00e7\u00e3o pois estamos tentando resolver o problema o mais rapido possivel !
                                            \n\nAtt, desenvolvedor Danilo de Araújo !""", "ATENÇÃO",JOptionPane.ERROR_MESSAGE);
        //addDisciplinas();
    }//GEN-LAST:event_btnCadDisciplinasActionPerformed

    private void btnCadastrarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarCursoActionPerformed
       if(addNewCourses() == false){
            JOptionPane.showMessageDialog(null, "Impossivel cadastrar o curso, pois o curso já existe !");
       }
    }//GEN-LAST:event_btnCadastrarCursoActionPerformed
    private boolean addNewCourses() {
        String verifyRecordProf;
        Cursos course;
        String switchCourse = comboCurso.getSelectedItem().toString();
        int recordProfessor;

        if (switchCourse.equals("Escolha um curso")) {
            JOptionPane.showMessageDialog(null, "Informe primeiramente o curso que deseja cadastrar !");
        } else {
            verifyRecordProf = JOptionPane.showInputDialog(null, "Informe o REGISTRO do professor: ");
            if (verifyRecordProf != null) {
                recordProfessor = Integer.parseInt(verifyRecordProf.toString());
                if (updateInformations.pesquisarProfessor(recordProfessor) != null) {
                    for (Cursos courses : updateInformations.getCourses(recordProfessor)) {
                        if (courses.getNomeCurso().equals(switchCourse)) {return false;}
                    }
                    course = new Cursos(switchCourse);
                    updateInformations.cadastrarCursos(recordProfessor, course);
                    JOptionPane.showMessageDialog(null, "Curso cadastrado com sucesso !");

                } else {
                    JOptionPane.showMessageDialog(null, "Professor não encontrado na base de dados !");
                }
            }
        }
        return true;
    }

    private void addDisciplinas() {
        String verifyRecord;
        String nameCourse;
        int recordChecked;
        ArrayList<String> addNewDisciplinas = new ArrayList();
        if (txtCadDisciplinas.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "É necessario informar as disciplinas no campor de texto, antes de proceguir !");
        } else {
            verifyRecord = JOptionPane.showInputDialog(null, "Informe o REGISTRO do professor");
            if ((verifyRecord != null) || (verifyRecord.matches("[0-9]+"))) {
                recordChecked = Integer.parseInt(verifyRecord.toString());
                nameCourse = JOptionPane.showInputDialog(null, "Informe o nome do CURSO que deseja adicionar as disciplinas: ");
                if (nameCourse != null) {
                    addNewDisciplinas.add(txtCadDisciplinas.getText().toString());
                    updateInformations.cadastrarDisciplinas(recordChecked,nameCourse,addNewDisciplinas);
                    JOptionPane.showMessageDialog(null, "Disciplinas cadastradas com sucesso");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Professor não encontrado na base de dados !");
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadDisciplinas;
    private javax.swing.JButton btnCadastrarCurso;
    private javax.swing.JComboBox<String> comboCurso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtCadDisciplinas;
    // End of variables declaration//GEN-END:variables
}
